name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  PYTHONDONTWRITEBYTECODE: "1"
  PYTHONNOUSERSITE: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_INPUT: "1"

jobs:
  test:
    name: Test (${{ matrix.os }}, py${{ matrix.python }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-13, macos-14, windows-latest ]
        python: [ "3.8", "3.9", "3.10", "3.11", "3.12", "3.13" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: "pip"

      - name: (act-only) sanitize toolcache leftovers
        if: ${{ env.ACT == 'true' && startsWith(matrix.os, 'ubuntu') }}
        shell: bash
        run: |
          set -euxo pipefail
          find /opt/hostedtoolcache -type d -path "*/site-packages/~*" -maxdepth 1 -print -exec rm -rf {} + || true

      - name: Create venv & install test deps
        shell: bash
        run: |
          set -euxo pipefail
          python -m venv .venv
          . .venv/bin/activate || . .venv/Scripts/activate
          python -m pip install --upgrade pip
          # keep tests realistic; if your extras pull giant deps and you want even faster local act, you can split extras
          python -m pip install -e ".[test]"

      - name: Run tests
        shell: bash
        run: |
          set -euxo pipefail
          . .venv/bin/activate || . .venv/Scripts/activate
          pytest -q --maxfail=1 --disable-warnings

      - name: CI summary
        if: always()
        run: |
          echo "## Test summary (${{ matrix.os }}, Python ${{ matrix.python }})" >> $GITHUB_STEP_SUMMARY
          echo "- Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
