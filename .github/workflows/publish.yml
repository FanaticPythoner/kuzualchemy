# SPDX-FileCopyrightText: 2025 FanaticPythoner
# SPDX-License-Identifier: Apache-2.0

name: Publish Python Package to PyPI and TestPyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      target_pypi:
        description: 'Target PyPI instance'
        required: true
        default: 'testpypi'
        type: choice
        options:
          - testpypi
          - pypi

jobs:
  # @@ STEP 1: Build comprehensive wheels for all platforms
  build-wheels:
    name: Build Multi-Platform Wheels
    uses: ./.github/workflows/build-wheels.yml
    with:
      upload_artifacts: true
      artifact_name_suffix: "publish"
      build_sdist: true
      build_wheels: true

  # @@ STEP 2: Publish to PyPI with comprehensive wheel support
  publish:
    name: Publish Python distributions
    runs-on: ubuntu-latest
    needs: [build-wheels]

    # Define the environment based on the trigger
    # If it's a release, target 'pypi' environment.
    # If it's a manual dispatch, target the environment specified in the input.
    environment: ${{ (github.event_name == 'release' && 'pypi') || (github.event_name == 'workflow_dispatch' && github.event.inputs.target_pypi) }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download sorted, deduplicated artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "sorted-wheels-*publish*"
          path: dist/
          merge-multiple: true

      - name: Verify distribution files
        run: |
          echo "Distribution files prepared:"
          ls -la dist/

          # Verify we have files to publish
          if [ ! "$(ls -A dist/)" ]; then
            echo "ERROR: No distribution files found"
            exit 1
          fi

      - name: Verify built artifacts
        run: |
          python -m pip install --upgrade pip twine
          python -m twine check dist/*

      - name: Publish package to TestPyPI
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.target_pypi == 'testpypi'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          verbose: true

      - name: Publish package to PyPI
        if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.target_pypi == 'pypi')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          verbose: true